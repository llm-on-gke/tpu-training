apiVersion: batch/v1
kind: Job
metadata:
  name: mnist-training-job
spec:
  template:
    metadata:
      name: mnist
      annotations:
        gke-gcsfuse/volumes: "true"
    spec:
      nodeSelector:
        cloud.google.com/gke-tpu-topology: 2x2  # target topology
        cloud.google.com/gke-tpu-accelerator: tpu-v6e-slice #tpu-v5-lite-podslice
      containers:
      - name: tensorflow
        image: python:3.10 #tensorflow/tensorflow:2.14.0
        securityContext:
          privileged: true
        command:
              - bash
              - -xc
              - |
                pip install --user setuptools==65.5.0
                pip install cloud-tpu-client
                pip install gin-config && pip install tensorflow-datasets && pip install tf-keras-nightly --no-deps
                pip install https://storage.googleapis.com/tensorflow-public-build-artifacts/prod/tensorflow/official/release/nightly/linux_x86_tpu/wheel_py310/749/20240915-062017/github/tensorflow/build_output/tf_nightly_tpu-2.18.0.dev20240915-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl -f https://storage.googleapis.com/libtpu-tf-releases/index.html --force
                TF_USE_LEGACY_KERAS=1 TPU_NAME=local python3 -c \
                'import tensorflow as tf
                import os
                print("TensorFlow version " + tf.__version__)
                cluster_resolver = tf.distribute.cluster_resolver.TPUClusterResolver()
                tf.config.experimental_connect_to_cluster(cluster_resolver)
                tf.tpu.experimental.initialize_tpu_system(cluster_resolver)
                strategy = tf.distribute.TPUStrategy(cluster_resolver)
                print("All devices: ", tf.config.list_logical_devices("TPU"))'
                #sleep infinity
                ./trainer.sh

                
        #command: ["/bin/bash", "-c", "--"]
        #args: ["cd /data/tensorflow-mnist-example; pip3 install -r requirements.txt; python3 tensorflow_mnist_train_distributed.py"]
                 
        resources:
          requests:
            google.com/tpu: "4"  # TPU chip request
          limits:
            google.com/tpu: "4"  # TPU chip request
        volumeMounts:
        - name: gcs-fuse-csi-vol
          mountPath: /data
          readOnly: false
      serviceAccountName: tpu-sa
      volumes:
      - name: gcs-fuse-csi-vol
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: false
          volumeAttributes:
            bucketName: rick-tpulib-gke
            mountOptions: "implicit-dirs"
      restartPolicy: "Never"
